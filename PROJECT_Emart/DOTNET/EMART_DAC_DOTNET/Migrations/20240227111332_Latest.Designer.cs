// <auto-generated />
using System;
using EMART_DAC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMARTDAC.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240227111332_Latest")]
    partial class Latest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EMART_DAC.Models.Cartmaster", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<int>("Custid")
                        .HasColumnType("int")
                        .HasColumnName("custid");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("prodid");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.HasKey("CartId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Prodid" }, "FKa4x5t1elnol7fw9dkgwo1rjl5");

                    b.HasIndex(new[] { "Custid", "Prodid" }, "UKeum13wouai95dogaxypbfm5m5")
                        .IsUnique();

                    b.ToTable("cartmaster", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.CategoryMaster", b =>
                {
                    b.Property<int>("CatmasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catmaster_id");

                    b.Property<string>("CatImgPath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cat_img_path");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name");

                    b.Property<ulong>("Childflag")
                        .HasColumnType("bit(1)")
                        .HasColumnName("childflag");

                    b.Property<int>("ParentCatid")
                        .HasColumnType("int")
                        .HasColumnName("parent_catid");

                    b.HasKey("CatmasterId")
                        .HasName("PRIMARY");

                    b.ToTable("category_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.ConfigDetailMaster", b =>
                {
                    b.Property<int>("ConfigDetailsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_detailsid");

                    b.Property<string>("ConfigDetails")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("config_details");

                    b.Property<int>("Configid")
                        .HasColumnType("int")
                        .HasColumnName("configid");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("prodid");

                    b.HasKey("ConfigDetailsid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Prodid" }, "FK9xrma2d2c6tmn9kfisoju6c4m");

                    b.HasIndex(new[] { "Configid" }, "FKiuq1carlv822tcbnx5bf6wus6");

                    b.ToTable("config_detail_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.ConfigMaster", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_id");

                    b.Property<string>("ConfigName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("config_name");

                    b.HasKey("ConfigId")
                        .HasName("PRIMARY");

                    b.ToTable("config_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.Customermaster", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cust_id");

                    b.Property<ulong>("CardHolder")
                        .HasColumnType("bit(1)")
                        .HasColumnName("card_holder");

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cust_address");

                    b.Property<string>("CustEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cust_email");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cust_name");

                    b.Property<string>("CustPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cust_password");

                    b.Property<string>("CustPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cust_phone");

                    b.Property<int>("Points")
                        .HasColumnType("int")
                        .HasColumnName("points");

                    b.HasKey("CustId")
                        .HasName("PRIMARY");

                    b.ToTable("customermaster", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.InvoiceDetailsMaster", b =>
                {
                    b.Property<int>("InvoiceDtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_dt_id");

                    b.Property<double>("CardHolderPrice")
                        .HasColumnType("double")
                        .HasColumnName("card_holder_price");

                    b.Property<int>("Invoiceid")
                        .HasColumnType("int")
                        .HasColumnName("invoiceid");

                    b.Property<double>("Mrp")
                        .HasColumnType("double")
                        .HasColumnName("mrp");

                    b.Property<int>("PointsRedeem")
                        .HasColumnType("int")
                        .HasColumnName("points_redeem");

                    b.Property<string>("ProdName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("prod_name");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("prodid");

                    b.HasKey("InvoiceDtId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Invoiceid" }, "FKpgk06x492m3k7h3it31vrlg54");

                    b.HasIndex(new[] { "Prodid" }, "FKpj8eh8y2k7hlenkf24k74423g");

                    b.ToTable("invoice_details_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.InvoiceMaster", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    b.Property<int>("Custid")
                        .HasColumnType("int")
                        .HasColumnName("custid");

                    b.Property<double>("DeliveryCharge")
                        .HasColumnType("double")
                        .HasColumnName("delivery_charge");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date")
                        .HasColumnName("invoice_date");

                    b.Property<double>("Tax")
                        .HasColumnType("double")
                        .HasColumnName("tax");

                    b.Property<double>("TotalAmt")
                        .HasColumnType("double")
                        .HasColumnName("total_amt");

                    b.Property<double>("TotalBill")
                        .HasColumnType("double")
                        .HasColumnName("total_bill");

                    b.HasKey("InvoiceId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Custid" }, "FK7u0t7n1mya9ncro1bp50tgdq4");

                    b.ToTable("invoice_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.OrderMaster", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Custid")
                        .HasColumnType("int")
                        .HasColumnName("custid");

                    b.Property<DateTime?>("Deliverydate")
                        .HasColumnType("date")
                        .HasColumnName("deliverydate");

                    b.Property<int>("Invoiceid")
                        .HasColumnType("int")
                        .HasColumnName("invoiceid");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<string>("ShippingAdd")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("shipping_add");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Invoiceid" }, "FKgnu6ib5f4qddkkkqj1k19hoo7");

                    b.HasIndex(new[] { "Custid" }, "FKtb5490ctvm66hht5e0rfpyih0");

                    b.ToTable("order_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.ProductMaster", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prod_id");

                    b.Property<double>("CardHolderPrice")
                        .HasColumnType("double")
                        .HasColumnName("card_holder_price");

                    b.Property<int>("Catmasterid")
                        .HasColumnType("int")
                        .HasColumnName("catmasterid");

                    b.Property<int?>("Disc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("disc")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Imgpath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imgpath");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("int")
                        .HasColumnName("inventory_quantity");

                    b.Property<double>("MrpPrice")
                        .HasColumnType("double")
                        .HasColumnName("mrp_price");

                    b.Property<double>("OfferPrice")
                        .HasColumnType("double")
                        .HasColumnName("offer_price");

                    b.Property<int>("PointsRedeem")
                        .HasColumnType("int")
                        .HasColumnName("points_redeem");

                    b.Property<string>("ProdLongDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("prod_long_desc");

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("prod_name");

                    b.Property<string>("ProdShortDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("prod_short_desc");

                    b.HasKey("ProdId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Catmasterid" }, "FK7l27rit3nf8l5qmep0gvi3j4d");

                    b.ToTable("product_master", (string)null);
                });

            modelBuilder.Entity("EMART_DAC.Models.Cartmaster", b =>
                {
                    b.HasOne("EMART_DAC.Models.Customermaster", "Cust")
                        .WithMany("Cartmasters")
                        .HasForeignKey("Custid")
                        .IsRequired()
                        .HasConstraintName("FKarshbmm2wr9ypr7fhui450isf");

                    b.HasOne("EMART_DAC.Models.ProductMaster", "Prod")
                        .WithMany("Cartmasters")
                        .HasForeignKey("Prodid")
                        .IsRequired()
                        .HasConstraintName("FKa4x5t1elnol7fw9dkgwo1rjl5");

                    b.Navigation("Cust");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("EMART_DAC.Models.ConfigDetailMaster", b =>
                {
                    b.HasOne("EMART_DAC.Models.ConfigMaster", "Config")
                        .WithMany("ConfigDetailMasters")
                        .HasForeignKey("Configid")
                        .IsRequired()
                        .HasConstraintName("FKiuq1carlv822tcbnx5bf6wus6");

                    b.HasOne("EMART_DAC.Models.ProductMaster", "Prod")
                        .WithMany("ConfigDetailMasters")
                        .HasForeignKey("Prodid")
                        .IsRequired()
                        .HasConstraintName("FK9xrma2d2c6tmn9kfisoju6c4m");

                    b.Navigation("Config");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("EMART_DAC.Models.InvoiceDetailsMaster", b =>
                {
                    b.HasOne("EMART_DAC.Models.InvoiceMaster", "Invoice")
                        .WithMany("InvoiceDetailsMasters")
                        .HasForeignKey("Invoiceid")
                        .IsRequired()
                        .HasConstraintName("FKpgk06x492m3k7h3it31vrlg54");

                    b.HasOne("EMART_DAC.Models.ProductMaster", "Prod")
                        .WithMany("InvoiceDetailsMasters")
                        .HasForeignKey("Prodid")
                        .IsRequired()
                        .HasConstraintName("FKpj8eh8y2k7hlenkf24k74423g");

                    b.Navigation("Invoice");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("EMART_DAC.Models.InvoiceMaster", b =>
                {
                    b.HasOne("EMART_DAC.Models.Customermaster", "Cust")
                        .WithMany("InvoiceMasters")
                        .HasForeignKey("Custid")
                        .IsRequired()
                        .HasConstraintName("FK7u0t7n1mya9ncro1bp50tgdq4");

                    b.Navigation("Cust");
                });

            modelBuilder.Entity("EMART_DAC.Models.OrderMaster", b =>
                {
                    b.HasOne("EMART_DAC.Models.Customermaster", "Cust")
                        .WithMany("OrderMasters")
                        .HasForeignKey("Custid")
                        .IsRequired()
                        .HasConstraintName("FKtb5490ctvm66hht5e0rfpyih0");

                    b.HasOne("EMART_DAC.Models.InvoiceMaster", "Invoice")
                        .WithMany("OrderMasters")
                        .HasForeignKey("Invoiceid")
                        .IsRequired()
                        .HasConstraintName("FKgnu6ib5f4qddkkkqj1k19hoo7");

                    b.Navigation("Cust");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("EMART_DAC.Models.ProductMaster", b =>
                {
                    b.HasOne("EMART_DAC.Models.CategoryMaster", "Catmaster")
                        .WithMany("ProductMasters")
                        .HasForeignKey("Catmasterid")
                        .IsRequired()
                        .HasConstraintName("FK7l27rit3nf8l5qmep0gvi3j4d");

                    b.Navigation("Catmaster");
                });

            modelBuilder.Entity("EMART_DAC.Models.CategoryMaster", b =>
                {
                    b.Navigation("ProductMasters");
                });

            modelBuilder.Entity("EMART_DAC.Models.ConfigMaster", b =>
                {
                    b.Navigation("ConfigDetailMasters");
                });

            modelBuilder.Entity("EMART_DAC.Models.Customermaster", b =>
                {
                    b.Navigation("Cartmasters");

                    b.Navigation("InvoiceMasters");

                    b.Navigation("OrderMasters");
                });

            modelBuilder.Entity("EMART_DAC.Models.InvoiceMaster", b =>
                {
                    b.Navigation("InvoiceDetailsMasters");

                    b.Navigation("OrderMasters");
                });

            modelBuilder.Entity("EMART_DAC.Models.ProductMaster", b =>
                {
                    b.Navigation("Cartmasters");

                    b.Navigation("ConfigDetailMasters");

                    b.Navigation("InvoiceDetailsMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
