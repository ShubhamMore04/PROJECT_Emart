{"ast":null,"code":"var _jsxFileName = \"B:\\\\CDAC\\\\EMART_C-DAC_PROJECT\\\\JAVA\\\\JAVAFRONTEND_REACT\\\\src\\\\Component\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapNavbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNavbar = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(sessionStorage.getItem('islogin') === 'true');\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setIsLogin(sessionStorage.getItem('islogin') === 'true');\n    };\n\n    // Listen for changes in sessionStorage\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup the listener when the component is unmounted\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [isLogin]);\n  const handleLogout = () => {\n    // Clear user-related data from sessionStorage\n    sessionStorage.removeItem('custId');\n    sessionStorage.removeItem('islogin');\n\n    // Update the state to trigger re-render\n    setIsLogin(false);\n  };\n  useEffect(() => {\n    // Set up an interval to periodically check sessionStorage\n    const intervalId = setInterval(() => {\n      // Check sessionStorage and update state accordingly\n      setIsLogin(sessionStorage.getItem('islogin') === 'true');\n    }, 1000); // Check every second\n\n    // Clean up interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BootstrapNavbar, {\n    expand: \"lg\",\n    variant: \"dark\",\n    className: \"navbar-custom\",\n    children: [/*#__PURE__*/_jsxDEV(BootstrapNavbar.Brand, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"30\",\n          height: \"22\",\n          viewBox: \"0 0 40 32\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \"My Emart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapNavbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapNavbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"mr-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Link,\n          to: \"/categories\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Link,\n          to: \"/login\",\n          onClick: handleLogout,\n          children: isLogin ? 'Logout' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Link,\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Link,\n          to: \"/AboutPage\",\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Link,\n          to: \"/cartpage\",\n          children: \"CART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomNavbar, \"D20eVoQQM3vMIsEEZKLmOeAQnoQ=\");\n_c = CustomNavbar;\nexport default CustomNavbar;\nvar _c;\n$RefreshReg$(_c, \"CustomNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","BootstrapNavbar","Nav","jsxDEV","_jsxDEV","CustomNavbar","_s","isLogin","setIsLogin","sessionStorage","getItem","handleStorageChange","window","addEventListener","removeEventListener","handleLogout","removeItem","intervalId","setInterval","clearInterval","expand","variant","className","children","Brand","to","width","height","viewBox","fill","xmlns","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","as","onClick","_c","$RefreshReg$"],"sources":["B:/CDAC/EMART_C-DAC_PROJECT/JAVA/JAVAFRONTEND_REACT/src/Component/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapNavbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './Navbar.css';\n\nconst CustomNavbar = () => {\n  const [isLogin, setIsLogin] = useState(sessionStorage.getItem('islogin') === 'true');\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setIsLogin(sessionStorage.getItem('islogin') === 'true');\n    };\n\n    // Listen for changes in sessionStorage\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup the listener when the component is unmounted\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [isLogin]);\n\n  const handleLogout = () => {\n    // Clear user-related data from sessionStorage\n    sessionStorage.removeItem('custId');\n    sessionStorage.removeItem('islogin');\n\n    // Update the state to trigger re-render\n    setIsLogin(false);\n  };\n\n  useEffect(() => {\n    // Set up an interval to periodically check sessionStorage\n    const intervalId = setInterval(() => {\n      // Check sessionStorage and update state accordingly\n      setIsLogin(sessionStorage.getItem('islogin') === 'true');\n    }, 1000); // Check every second\n\n    // Clean up interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <BootstrapNavbar expand=\"lg\" variant=\"dark\" className=\"navbar-custom\">\n      <BootstrapNavbar.Brand>\n        <Link to=\"/home\">\n          <svg width=\"30\" height=\"22\" viewBox=\"0 0 40 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            {/* Your SVG content here */}\n          </svg>\n          My Emart\n        </Link>\n      </BootstrapNavbar.Brand>\n\n      <BootstrapNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <BootstrapNavbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to=\"/categories\">\n            Categories\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/login\" onClick={handleLogout}>\n            {isLogin ? 'Logout' : 'Login'}\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/register\">\n            Register\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/AboutPage\">\n            About Us\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/cartpage\">\n            CART\n          </Nav.Link>\n        </Nav>\n      </BootstrapNavbar.Collapse>\n    </BootstrapNavbar>\n  );\n};\n\nexport default CustomNavbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}