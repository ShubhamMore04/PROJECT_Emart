{"ast":null,"code":"var _jsxFileName = \"B:\\\\CDAC\\\\EMART_C-DAC_PROJECT\\\\JAVA\\\\JAVAFRONTEND_REACT\\\\src\\\\Component\\\\Orderpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Spinner, Alert, Container, Row, Col, Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderPage = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching order details:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handlePlaceOrder = async () => {\n    const customermail = sessionStorage.getItem('email');\n    try {\n      const response = await fetch('http://localhost:8080/sendMailWithPDFAttachment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: customermail\n        })\n      });\n\n      // Check if the response is successful (status code 2xx)\n      if (response.ok) {\n        const contentType = response.headers.get('content-type');\n\n        // Check if the response is JSON\n        if (contentType && contentType.includes('application/json')) {\n          const data = await response.json();\n          console.log('Email sent successfully:', data);\n          setIsEmailSent(true);\n\n          // Redirect to home page after 1 second\n          setTimeout(() => {\n            navigate('/home');\n          }, 1000);\n        } else {\n          console.log('Email sent successfully');\n          setIsEmailSent(true);\n\n          // Redirect to home page after 1 second\n          setTimeout(() => {\n            navigate('/home');\n          }, 1000);\n        }\n      } else {\n        // Handle non-successful response\n        console.error('Error sending email. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error sending email:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Order Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [isEmailSent && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              onClose: () => setIsEmailSent(false),\n              dismissible: true,\n              children: \"Email with invoice details sent successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Thank you for your order! Your order details are being processed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handlePlaceOrder,\n              children: \"Send Email with Invoice Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderPage, \"Ki3Q4dCJToKsFRmhb60ghc2MmOA=\", false, function () {\n  return [useNavigate];\n});\n_c = OrderPage;\nexport default OrderPage;\nvar _c;\n$RefreshReg$(_c, \"OrderPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Spinner","Alert","Container","Row","Col","Card","useNavigate","jsxDEV","_jsxDEV","OrderPage","_s","isLoading","setIsLoading","isEmailSent","setIsEmailSent","navigate","fetchData","Promise","resolve","setTimeout","error","console","handlePlaceOrder","customermail","sessionStorage","getItem","response","fetch","method","headers","body","JSON","stringify","email","ok","contentType","get","includes","data","json","log","status","className","children","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","animation","role","Body","variant","onClose","dismissible","Text","onClick","_c","$RefreshReg$"],"sources":["B:/CDAC/EMART_C-DAC_PROJECT/JAVA/JAVAFRONTEND_REACT/src/Component/Orderpage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Spinner, Alert, Container, Row, Col, Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst OrderPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isEmailSent, setIsEmailSent] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await new Promise((resolve) => setTimeout(resolve, 2000));\n                setIsLoading(false);\n            } catch (error) {\n                console.error('Error fetching order details:', error);\n                setIsLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const handlePlaceOrder = async () => {\n    const customermail = sessionStorage.getItem('email');\n   \n\n    \n\n    try {\n        const response = await fetch('http://localhost:8080/sendMailWithPDFAttachment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        body: JSON.stringify({ email: customermail })\n        });\n\n        // Check if the response is successful (status code 2xx)\n        if (response.ok) {\n            const contentType = response.headers.get('content-type');\n\n            // Check if the response is JSON\n            if (contentType && contentType.includes('application/json')) {\n                const data = await response.json();\n                console.log('Email sent successfully:', data);\n                setIsEmailSent(true);\n\n                // Redirect to home page after 1 second\n                setTimeout(() => {\n                    navigate('/home');\n                }, 1000);\n            } else {\n                console.log('Email sent successfully');\n                setIsEmailSent(true);\n\n                // Redirect to home page after 1 second\n                setTimeout(() => {\n                    navigate('/home');\n                }, 1000);\n            }\n        } else {\n            // Handle non-successful response\n            console.error('Error sending email. Status:', response.status);\n        }\n    } catch (error) {\n        console.error('Error sending email:', error);\n    }\n};\n\n    return (\n        <Container className=\"mt-5\">\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={8}>\n                    <h2 className=\"text-center mb-4\">Order Page</h2>\n\n                    {isLoading ? (\n                        <div className=\"d-flex justify-content-center\">\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        </div>\n                    ) : (\n                        <Card>\n                            <Card.Body>\n                                {isEmailSent && (\n                                    <Alert variant=\"success\" onClose={() => setIsEmailSent(false)} dismissible>\n                                        Email with invoice details sent successfully!\n                                    </Alert>\n                                )}\n\n                                <Card.Text>\n                                    Thank you for your order! Your order details are being processed.\n                                </Card.Text>\n\n                                <Button variant=\"primary\" onClick={handlePlaceOrder}>\n                                    Send Email with Invoice Details\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default OrderPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}