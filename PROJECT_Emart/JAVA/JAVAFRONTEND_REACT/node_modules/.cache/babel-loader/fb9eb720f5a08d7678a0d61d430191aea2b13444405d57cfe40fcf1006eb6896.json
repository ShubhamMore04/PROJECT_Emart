{"ast":null,"code":"var _jsxFileName = \"B:\\\\CDAC\\\\C-DAC_PROJECT\\\\EMART_C-DAC_PROJECT\\\\JAVA\\\\MYJAVAFRONTEND\\\\src\\\\Component\\\\Subcategories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ItemCard from './ItemCard';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubCategory = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  const [Subcategories, setSubcategories] = useState([]);\n  const handleClick = (id, flag) => {\n    if (flag) {\n      navigate(`/subcat/${id}`);\n    } else {\n      navigate(`/product/${id}`);\n    }\n  };\n  const fetchSubcategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/Category/getCatNameByParentId/' + id);\n      const data = await response.json();\n      setSubcategories(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchSubcategories();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: Array.isArray(Subcategories) && Subcategories.map(i => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        onClick: () => handleClick(i.catmasterID, i.childflag),\n        children: /*#__PURE__*/_jsxDEV(ItemCard, {\n          title: i.categoryName,\n          img: i.catImgPath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, i.catmasterID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SubCategory, \"ayHt8/eQgOIqzC07ilm/A1Bns9A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SubCategory;\nexport default SubCategory;\nvar _c;\n$RefreshReg$(_c, \"SubCategory\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ItemCard","Container","Row","Col","jsxDEV","_jsxDEV","SubCategory","_s","id","navigate","Subcategories","setSubcategories","handleClick","flag","fetchSubcategories","response","fetch","data","json","error","console","children","Array","isArray","map","i","md","onClick","catmasterID","childflag","title","categoryName","img","catImgPath","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["B:/CDAC/C-DAC_PROJECT/EMART_C-DAC_PROJECT/JAVA/MYJAVAFRONTEND/src/Component/Subcategories.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ItemCard from './ItemCard';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst SubCategory = () => {\n  const { id } = useParams();\n  let navigate = useNavigate();\n  const [Subcategories, setSubcategories] = useState([]);\n\n  const handleClick = (id, flag) => {\n    if (flag) {\n      navigate(`/subcat/${id}`);\n    } else {\n      navigate(`/product/${id}`);\n    }\n  };\n\n  const fetchSubcategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/Category/getCatNameByParentId/' + id);\n      const data = await response.json();\n      setSubcategories(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchSubcategories();\n  }, [id]);\n\n  return (\n    <Container>\n      <Row>\n        {Array.isArray(Subcategories) &&\n          Subcategories.map((i) => (\n            <Col md={4} key={i.catmasterID} onClick={() => handleClick(i.catmasterID, i.childflag)}>\n              <ItemCard title={i.categoryName} img={i.catImgPath} />\n            </Col>\n          ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default SubCategory;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,IAAIW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC5B,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMgB,WAAW,GAAGA,CAACJ,EAAE,EAAEK,IAAI,KAAK;IAChC,IAAIA,IAAI,EAAE;MACRJ,QAAQ,CAAE,WAAUD,EAAG,EAAC,CAAC;IAC3B,CAAC,MAAM;MACLC,QAAQ,CAAE,YAAWD,EAAG,EAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,GAAGR,EAAE,CAAC;MACzF,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,gBAAgB,CAACM,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdiB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA,CAACJ,SAAS;IAAAoB,QAAA,eACRhB,OAAA,CAACH,GAAG;MAAAmB,QAAA,EACDC,KAAK,CAACC,OAAO,CAACb,aAAa,CAAC,IAC3BA,aAAa,CAACc,GAAG,CAAEC,CAAC,iBAClBpB,OAAA,CAACF,GAAG;QAACuB,EAAE,EAAE,CAAE;QAAqBC,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACa,CAAC,CAACG,WAAW,EAAEH,CAAC,CAACI,SAAS,CAAE;QAAAR,QAAA,eACrFhB,OAAA,CAACL,QAAQ;UAAC8B,KAAK,EAAEL,CAAC,CAACM,YAAa;UAACC,GAAG,EAAEP,CAAC,CAACQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADvCZ,CAAC,CAACG,WAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC9B,EAAA,CAvCID,WAAW;EAAA,QACAR,SAAS,EACTC,WAAW;AAAA;AAAAuC,EAAA,GAFtBhC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}